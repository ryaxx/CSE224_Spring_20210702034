
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.38 (git sha1 543faed9c8c, clang++ 17.0.6 -fPIC -Os)

[TCL: yosys -import] Command name collision: found pre-existing command `cd' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `eval' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `exec' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `read' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `trace' -> skip.

1. Executing Liberty frontend: /Users/onurakkaya/.volare/sky130A/libs.ref/sky130_fd_sc_hd/lib/sky130_fd_sc_hd__tt_025C_1v80.lib
Imported 428 cell types from liberty file.

2. Executing Verilog-2005 frontend: /openlane/designs/lab6/src/TopModule.v
Parsing SystemVerilog input from `/openlane/designs/lab6/src/TopModule.v' to AST representation.
Storing AST representation for module `$abstract\TopModule'.
Successfully finished Verilog frontend.

3. Executing Verilog-2005 frontend: /openlane/designs/lab6/src/ALU.v
Parsing SystemVerilog input from `/openlane/designs/lab6/src/ALU.v' to AST representation.
Storing AST representation for module `$abstract\ALU'.
Successfully finished Verilog frontend.

4. Executing Verilog-2005 frontend: /openlane/designs/lab6/src/Decoder.v
Parsing SystemVerilog input from `/openlane/designs/lab6/src/Decoder.v' to AST representation.
Storing AST representation for module `$abstract\Decoder'.
Successfully finished Verilog frontend.

5. Executing Verilog-2005 frontend: /openlane/designs/lab6/src/InstructionMemory.v
Parsing SystemVerilog input from `/openlane/designs/lab6/src/InstructionMemory.v' to AST representation.
Storing AST representation for module `$abstract\InstructionMemory'.
Successfully finished Verilog frontend.

6. Executing Verilog-2005 frontend: /openlane/designs/lab6/src/ProgramCounter.v
Parsing SystemVerilog input from `/openlane/designs/lab6/src/ProgramCounter.v' to AST representation.
Storing AST representation for module `$abstract\ProgramCounter'.
Successfully finished Verilog frontend.

7. Executing Verilog-2005 frontend: /openlane/designs/lab6/src/RegisterFile.v
Parsing SystemVerilog input from `/openlane/designs/lab6/src/RegisterFile.v' to AST representation.
Storing AST representation for module `$abstract\RegisterFile'.
Successfully finished Verilog frontend.

8. Executing Verilog-2005 frontend: /openlane/designs/lab6/src/SevenSegmentDisplay.v
Parsing SystemVerilog input from `/openlane/designs/lab6/src/SevenSegmentDisplay.v' to AST representation.
Storing AST representation for module `$abstract\SevenSegmentDisplay'.
Successfully finished Verilog frontend.

9. Executing HIERARCHY pass (managing design hierarchy).

10. Executing AST frontend in derive mode using pre-parsed AST for module `\TopModule'.
Generating RTLIL representation for module `\TopModule'.

10.1. Analyzing design hierarchy..
Top module:  \TopModule

10.2. Executing AST frontend in derive mode using pre-parsed AST for module `\SevenSegmentDisplay'.
Generating RTLIL representation for module `\SevenSegmentDisplay'.

10.3. Executing AST frontend in derive mode using pre-parsed AST for module `\ProgramCounter'.
Generating RTLIL representation for module `\ProgramCounter'.

10.4. Executing AST frontend in derive mode using pre-parsed AST for module `\ALU'.
Generating RTLIL representation for module `\ALU'.

10.5. Executing AST frontend in derive mode using pre-parsed AST for module `\RegisterFile'.
Generating RTLIL representation for module `\RegisterFile'.

10.6. Executing AST frontend in derive mode using pre-parsed AST for module `\Decoder'.
Generating RTLIL representation for module `\Decoder'.

10.7. Executing AST frontend in derive mode using pre-parsed AST for module `\InstructionMemory'.
Generating RTLIL representation for module `\InstructionMemory'.

10.8. Analyzing design hierarchy..
Top module:  \TopModule
Used module:     \SevenSegmentDisplay
Used module:     \ProgramCounter
Used module:     \ALU
Used module:     \RegisterFile
Used module:     \Decoder
Used module:     \InstructionMemory

10.9. Analyzing design hierarchy..
Top module:  \TopModule
Used module:     \SevenSegmentDisplay
Used module:     \ProgramCounter
Used module:     \ALU
Used module:     \RegisterFile
Used module:     \Decoder
Used module:     \InstructionMemory
Removing unused module `$abstract\SevenSegmentDisplay'.
Removing unused module `$abstract\RegisterFile'.
Removing unused module `$abstract\ProgramCounter'.
Removing unused module `$abstract\InstructionMemory'.
Removing unused module `$abstract\Decoder'.
Removing unused module `$abstract\ALU'.
Removing unused module `$abstract\TopModule'.
Removed 7 unused modules.
Mapping positional arguments of cell TopModule.pc_module (ProgramCounter).
Mapping positional arguments of cell TopModule.alu (ALU).
Mapping positional arguments of cell TopModule.decoder (Decoder).
Mapping positional arguments of cell TopModule.imem (InstructionMemory).

11. Generating Graphviz representation of design.
Writing dot description to `/openlane/designs/lab6/runs/RUN_2025.06.05_16.46.04/tmp/synthesis/hierarchy.dot'.
Dumping module TopModule to page 1.
Renaming module TopModule to TopModule.

12. Executing TRIBUF pass.

13. Executing HIERARCHY pass (managing design hierarchy).

13.1. Analyzing design hierarchy..
Top module:  \TopModule
Used module:     \SevenSegmentDisplay
Used module:     \ProgramCounter
Used module:     \ALU
Used module:     \RegisterFile
Used module:     \Decoder
Used module:     \InstructionMemory

13.2. Analyzing design hierarchy..
Top module:  \TopModule
Used module:     \SevenSegmentDisplay
Used module:     \ProgramCounter
Used module:     \ALU
Used module:     \RegisterFile
Used module:     \Decoder
Used module:     \InstructionMemory
Removed 0 unused modules.

14. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

15. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Marked 1 switch rules as full_case in process $proc$/openlane/designs/lab6/src/RegisterFile.v:13$24 in module RegisterFile.
Removed 1 dead cases from process $proc$/openlane/designs/lab6/src/ALU.v:8$16 in module ALU.
Marked 1 switch rules as full_case in process $proc$/openlane/designs/lab6/src/ALU.v:8$16 in module ALU.
Marked 2 switch rules as full_case in process $proc$/openlane/designs/lab6/src/ProgramCounter.v:9$14 in module ProgramCounter.
Removed 3 dead cases from process $proc$/openlane/designs/lab6/src/SevenSegmentDisplay.v:19$11 in module SevenSegmentDisplay.
Marked 3 switch rules as full_case in process $proc$/openlane/designs/lab6/src/SevenSegmentDisplay.v:19$11 in module SevenSegmentDisplay.
Marked 1 switch rules as full_case in process $proc$/openlane/designs/lab6/src/InstructionMemory.v:2$38 in module InstructionMemory.
Removed a total of 4 dead cases.

16. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 0 redundant assignments.
Promoted 18 assignments to connections.

17. Executing PROC_INIT pass (extract init attributes).
Found init rule in `\SevenSegmentDisplay.$proc$/openlane/designs/lab6/src/SevenSegmentDisplay.v:9$13'.
  Set init value: \counter = 20'00000000000000000000
Found init rule in `\SevenSegmentDisplay.$proc$/openlane/designs/lab6/src/SevenSegmentDisplay.v:8$12'.
  Set init value: \pos = 2'00

18. Executing PROC_ARST pass (detect async resets in processes).
Found async reset \reset in `\ProgramCounter.$proc$/openlane/designs/lab6/src/ProgramCounter.v:9$14'.

19. Executing PROC_ROM pass (convert switches to ROMs).
Converted 2 switches.
<suppressed ~7 debug messages>

20. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `\Decoder.$proc$/openlane/designs/lab6/src/Decoder.v:10$34'.
Creating decoders for process `\RegisterFile.$proc$/openlane/designs/lab6/src/RegisterFile.v:18$31'.
Creating decoders for process `\RegisterFile.$proc$/openlane/designs/lab6/src/RegisterFile.v:13$24'.
     1/3: $1$memwr$\registers$/openlane/designs/lab6/src/RegisterFile.v:15$23_EN[31:0]$30
     2/3: $1$memwr$\registers$/openlane/designs/lab6/src/RegisterFile.v:15$23_DATA[31:0]$29
     3/3: $1$memwr$\registers$/openlane/designs/lab6/src/RegisterFile.v:15$23_ADDR[4:0]$28
Creating decoders for process `\ALU.$proc$/openlane/designs/lab6/src/ALU.v:8$16'.
     1/1: $1\Result[31:0]
Creating decoders for process `\ProgramCounter.$proc$/openlane/designs/lab6/src/ProgramCounter.v:9$14'.
     1/1: $0\pc[4:0]
Creating decoders for process `\SevenSegmentDisplay.$proc$/openlane/designs/lab6/src/SevenSegmentDisplay.v:9$13'.
Creating decoders for process `\SevenSegmentDisplay.$proc$/openlane/designs/lab6/src/SevenSegmentDisplay.v:8$12'.
Creating decoders for process `\SevenSegmentDisplay.$proc$/openlane/designs/lab6/src/SevenSegmentDisplay.v:19$11'.
     1/3: $1\an[3:0]
     2/3: $1\seg[6:0]
     3/3: $1\digit[3:0]
Creating decoders for process `\SevenSegmentDisplay.$proc$/openlane/designs/lab6/src/SevenSegmentDisplay.v:11$7'.
     1/2: $0\counter[19:0]
     2/2: $0\pos[1:0]
Creating decoders for process `\InstructionMemory.$proc$/openlane/designs/lab6/src/InstructionMemory.v:2$38'.
     1/1: $1\instr[31:0]

21. Executing PROC_DLATCH pass (convert process syncs to latches).
No latch inferred for signal `\Decoder.\ALUop' from process `\Decoder.$proc$/openlane/designs/lab6/src/Decoder.v:10$34'.
No latch inferred for signal `\Decoder.\rs1' from process `\Decoder.$proc$/openlane/designs/lab6/src/Decoder.v:10$34'.
No latch inferred for signal `\Decoder.\rs2' from process `\Decoder.$proc$/openlane/designs/lab6/src/Decoder.v:10$34'.
No latch inferred for signal `\Decoder.\rd' from process `\Decoder.$proc$/openlane/designs/lab6/src/Decoder.v:10$34'.
No latch inferred for signal `\Decoder.\imm' from process `\Decoder.$proc$/openlane/designs/lab6/src/Decoder.v:10$34'.
No latch inferred for signal `\Decoder.\isImmediate' from process `\Decoder.$proc$/openlane/designs/lab6/src/Decoder.v:10$34'.
No latch inferred for signal `\RegisterFile.\readData1' from process `\RegisterFile.$proc$/openlane/designs/lab6/src/RegisterFile.v:18$31'.
No latch inferred for signal `\RegisterFile.\readData2' from process `\RegisterFile.$proc$/openlane/designs/lab6/src/RegisterFile.v:18$31'.
No latch inferred for signal `\ALU.\Result' from process `\ALU.$proc$/openlane/designs/lab6/src/ALU.v:8$16'.
No latch inferred for signal `\SevenSegmentDisplay.\seg' from process `\SevenSegmentDisplay.$proc$/openlane/designs/lab6/src/SevenSegmentDisplay.v:19$11'.
No latch inferred for signal `\SevenSegmentDisplay.\an' from process `\SevenSegmentDisplay.$proc$/openlane/designs/lab6/src/SevenSegmentDisplay.v:19$11'.
No latch inferred for signal `\SevenSegmentDisplay.\digit' from process `\SevenSegmentDisplay.$proc$/openlane/designs/lab6/src/SevenSegmentDisplay.v:19$11'.
No latch inferred for signal `\InstructionMemory.\instr' from process `\InstructionMemory.$proc$/openlane/designs/lab6/src/InstructionMemory.v:2$38'.

22. Executing PROC_DFF pass (convert process syncs to FFs).
Creating register for signal `\RegisterFile.$memwr$\registers$/openlane/designs/lab6/src/RegisterFile.v:15$23_ADDR' using process `\RegisterFile.$proc$/openlane/designs/lab6/src/RegisterFile.v:13$24'.
  created $dff cell `$procdff$85' with positive edge clock.
Creating register for signal `\RegisterFile.$memwr$\registers$/openlane/designs/lab6/src/RegisterFile.v:15$23_DATA' using process `\RegisterFile.$proc$/openlane/designs/lab6/src/RegisterFile.v:13$24'.
  created $dff cell `$procdff$86' with positive edge clock.
Creating register for signal `\RegisterFile.$memwr$\registers$/openlane/designs/lab6/src/RegisterFile.v:15$23_EN' using process `\RegisterFile.$proc$/openlane/designs/lab6/src/RegisterFile.v:13$24'.
  created $dff cell `$procdff$87' with positive edge clock.
Creating register for signal `\ProgramCounter.\pc' using process `\ProgramCounter.$proc$/openlane/designs/lab6/src/ProgramCounter.v:9$14'.
  created $adff cell `$procdff$88' with positive edge clock and positive level reset.
Creating register for signal `\SevenSegmentDisplay.\pos' using process `\SevenSegmentDisplay.$proc$/openlane/designs/lab6/src/SevenSegmentDisplay.v:11$7'.
  created $dff cell `$procdff$89' with positive edge clock.
Creating register for signal `\SevenSegmentDisplay.\counter' using process `\SevenSegmentDisplay.$proc$/openlane/designs/lab6/src/SevenSegmentDisplay.v:11$7'.
  created $dff cell `$procdff$90' with positive edge clock.

23. Executing PROC_MEMWR pass (convert process memory writes to cells).

24. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Removing empty process `Decoder.$proc$/openlane/designs/lab6/src/Decoder.v:10$34'.
Removing empty process `RegisterFile.$proc$/openlane/designs/lab6/src/RegisterFile.v:18$31'.
Found and cleaned up 1 empty switch in `\RegisterFile.$proc$/openlane/designs/lab6/src/RegisterFile.v:13$24'.
Removing empty process `RegisterFile.$proc$/openlane/designs/lab6/src/RegisterFile.v:13$24'.
Found and cleaned up 1 empty switch in `\ALU.$proc$/openlane/designs/lab6/src/ALU.v:8$16'.
Removing empty process `ALU.$proc$/openlane/designs/lab6/src/ALU.v:8$16'.
Found and cleaned up 2 empty switches in `\ProgramCounter.$proc$/openlane/designs/lab6/src/ProgramCounter.v:9$14'.
Removing empty process `ProgramCounter.$proc$/openlane/designs/lab6/src/ProgramCounter.v:9$14'.
Removing empty process `SevenSegmentDisplay.$proc$/openlane/designs/lab6/src/SevenSegmentDisplay.v:9$13'.
Removing empty process `SevenSegmentDisplay.$proc$/openlane/designs/lab6/src/SevenSegmentDisplay.v:8$12'.
Found and cleaned up 3 empty switches in `\SevenSegmentDisplay.$proc$/openlane/designs/lab6/src/SevenSegmentDisplay.v:19$11'.
Removing empty process `SevenSegmentDisplay.$proc$/openlane/designs/lab6/src/SevenSegmentDisplay.v:19$11'.
Found and cleaned up 1 empty switch in `\SevenSegmentDisplay.$proc$/openlane/designs/lab6/src/SevenSegmentDisplay.v:11$7'.
Removing empty process `SevenSegmentDisplay.$proc$/openlane/designs/lab6/src/SevenSegmentDisplay.v:11$7'.
Found and cleaned up 1 empty switch in `\InstructionMemory.$proc$/openlane/designs/lab6/src/InstructionMemory.v:2$38'.
Removing empty process `InstructionMemory.$proc$/openlane/designs/lab6/src/InstructionMemory.v:2$38'.
Cleaned up 9 empty switches.

25. Executing CHECK pass (checking for obvious problems).
Checking module TopModule...
Checking module Decoder...
Checking module RegisterFile...
Checking module ALU...
Checking module ProgramCounter...
Checking module SevenSegmentDisplay...
Checking module InstructionMemory...
Found and reported 0 problems.

26. Executing OPT_EXPR pass (perform const folding).
Optimizing module TopModule.
<suppressed ~1 debug messages>
Optimizing module Decoder.
Optimizing module RegisterFile.
Optimizing module ALU.
<suppressed ~1 debug messages>
Optimizing module ProgramCounter.
Optimizing module SevenSegmentDisplay.
<suppressed ~2 debug messages>
Optimizing module InstructionMemory.

27. Executing FLATTEN pass (flatten design).
Deleting now unused module Decoder.
Deleting now unused module RegisterFile.
Deleting now unused module ALU.
Deleting now unused module ProgramCounter.
Deleting now unused module SevenSegmentDisplay.
Deleting now unused module InstructionMemory.
<suppressed ~6 debug messages>

28. Executing OPT_EXPR pass (perform const folding).
Optimizing module TopModule.
<suppressed ~3 debug messages>

29. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \TopModule..
Removed 6 unused cells and 55 unused wires.
<suppressed ~9 debug messages>

30. Executing OPT pass (performing simple optimizations).

30.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module TopModule.

30.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\TopModule'.
<suppressed ~18 debug messages>
Removed a total of 6 cells.

30.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \TopModule..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~7 debug messages>

30.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \TopModule.
Performed a total of 0 changes.

30.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\TopModule'.
Removed a total of 0 cells.

30.6. Executing OPT_DFF pass (perform DFF optimizations).

30.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \TopModule..
Removed 0 unused cells and 5 unused wires.
<suppressed ~1 debug messages>

30.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module TopModule.

30.9. Rerunning OPT passes. (Maybe there is more to do..)

30.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \TopModule..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~7 debug messages>

30.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \TopModule.
Performed a total of 0 changes.

30.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\TopModule'.
Removed a total of 0 cells.

30.13. Executing OPT_DFF pass (perform DFF optimizations).

30.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \TopModule..

30.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module TopModule.

30.16. Finished OPT passes. (There is nothing left to do.)

31. Executing FSM pass (extract and optimize FSM).

31.1. Executing FSM_DETECT pass (finding FSMs in design).

31.2. Executing FSM_EXTRACT pass (extracting FSM from design).

31.3. Executing FSM_OPT pass (simple optimizations of FSMs).

31.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \TopModule..

31.5. Executing FSM_OPT pass (simple optimizations of FSMs).

31.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).

31.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

31.8. Executing FSM_MAP pass (mapping FSMs to basic logic).

32. Executing OPT pass (performing simple optimizations).

32.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module TopModule.

32.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\TopModule'.
Removed a total of 0 cells.

32.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \TopModule..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~7 debug messages>

32.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \TopModule.
Performed a total of 0 changes.

32.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\TopModule'.
Removed a total of 0 cells.

32.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $flatten\pc_module.$procdff$88 ($adff) from module TopModule (D = $flatten\pc_module.$procmux$65_Y, Q = \pc_module.pc).
Adding SRST signal on $flatten\display_module.$procdff$90 ($dff) from module TopModule (D = $flatten\display_module.$add$/openlane/designs/lab6/src/SevenSegmentDisplay.v:12$8_Y [19:0], Q = \display_module.counter, rval = 20'00000000000000000000).
Adding EN signal on $flatten\display_module.$procdff$89 ($dff) from module TopModule (D = $flatten\display_module.$add$/openlane/designs/lab6/src/SevenSegmentDisplay.v:15$10_Y [1:0], Q = \display_module.pos).

32.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \TopModule..
Removed 3 unused cells and 3 unused wires.
<suppressed ~4 debug messages>

32.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module TopModule.

32.9. Rerunning OPT passes. (Maybe there is more to do..)

32.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \TopModule..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~5 debug messages>

32.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \TopModule.
Performed a total of 0 changes.

32.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\TopModule'.
Removed a total of 0 cells.

32.13. Executing OPT_DFF pass (perform DFF optimizations).

32.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \TopModule..

32.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module TopModule.

32.16. Finished OPT passes. (There is nothing left to do.)

33. Executing WREDUCE pass (reducing word size of cells).
Removed top 28 address bits (of 32) from memory init port TopModule.$flatten\display_module.$auto$mem.cc:328:emit$42 ($flatten\display_module.$auto$proc_rom.cc:150:do_switch$40).
Removed top 27 address bits (of 32) from memory init port TopModule.$flatten\imem.$auto$mem.cc:328:emit$46 ($flatten\imem.$auto$proc_rom.cc:150:do_switch$44).
Removed top 2 bits (of 3) from port B of cell TopModule.$eq$/openlane/designs/lab6/src/TopModule.v:33$2 ($eq).
Removed top 1 bits (of 3) from port B of cell TopModule.$flatten\alu.$procmux$62_CMP0 ($eq).
Removed top 1 bits (of 3) from port B of cell TopModule.$flatten\alu.$procmux$61_CMP0 ($eq).
Removed top 27 bits (of 32) from port B of cell TopModule.$flatten\alu.$sub$/openlane/designs/lab6/src/ALU.v:16$22 ($sub).
Removed top 27 bits (of 32) from port B of cell TopModule.$flatten\alu.$add$/openlane/designs/lab6/src/ALU.v:15$21 ($add).
Removed top 31 bits (of 32) from port B of cell TopModule.$flatten\pc_module.$add$/openlane/designs/lab6/src/ProgramCounter.v:16$15 ($add).
Removed top 27 bits (of 32) from port Y of cell TopModule.$flatten\pc_module.$add$/openlane/designs/lab6/src/ProgramCounter.v:16$15 ($add).
Removed top 1 bits (of 2) from port B of cell TopModule.$flatten\display_module.$procmux$72_CMP0 ($eq).
Removed top 31 bits (of 32) from port B of cell TopModule.$flatten\display_module.$add$/openlane/designs/lab6/src/SevenSegmentDisplay.v:15$10 ($add).
Removed top 30 bits (of 32) from port Y of cell TopModule.$flatten\display_module.$add$/openlane/designs/lab6/src/SevenSegmentDisplay.v:15$10 ($add).
Removed top 3 bits (of 20) from port B of cell TopModule.$flatten\display_module.$eq$/openlane/designs/lab6/src/SevenSegmentDisplay.v:13$9 ($eq).
Removed top 31 bits (of 32) from port B of cell TopModule.$flatten\display_module.$add$/openlane/designs/lab6/src/SevenSegmentDisplay.v:12$8 ($add).
Removed top 12 bits (of 32) from port Y of cell TopModule.$flatten\display_module.$add$/openlane/designs/lab6/src/SevenSegmentDisplay.v:12$8 ($add).
Removed top 12 bits (of 32) from wire TopModule.$flatten\display_module.$add$/openlane/designs/lab6/src/SevenSegmentDisplay.v:12$8_Y.
Removed top 30 bits (of 32) from wire TopModule.$flatten\display_module.$add$/openlane/designs/lab6/src/SevenSegmentDisplay.v:15$10_Y.
Removed top 27 bits (of 32) from wire TopModule.$flatten\pc_module.$add$/openlane/designs/lab6/src/ProgramCounter.v:16$15_Y.

34. Executing PEEPOPT pass (run peephole optimizers).

35. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \TopModule..
Removed 0 unused cells and 3 unused wires.
<suppressed ~1 debug messages>

36. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module TopModule:
  creating $macc model for $flatten\alu.$add$/openlane/designs/lab6/src/ALU.v:11$17 ($add).
  creating $macc model for $flatten\alu.$add$/openlane/designs/lab6/src/ALU.v:15$21 ($add).
  creating $macc model for $flatten\alu.$sub$/openlane/designs/lab6/src/ALU.v:12$18 ($sub).
  creating $macc model for $flatten\alu.$sub$/openlane/designs/lab6/src/ALU.v:16$22 ($sub).
  creating $macc model for $flatten\display_module.$add$/openlane/designs/lab6/src/SevenSegmentDisplay.v:12$8 ($add).
  creating $macc model for $flatten\display_module.$add$/openlane/designs/lab6/src/SevenSegmentDisplay.v:15$10 ($add).
  creating $macc model for $flatten\pc_module.$add$/openlane/designs/lab6/src/ProgramCounter.v:16$15 ($add).
  creating $alu model for $macc $flatten\pc_module.$add$/openlane/designs/lab6/src/ProgramCounter.v:16$15.
  creating $alu model for $macc $flatten\display_module.$add$/openlane/designs/lab6/src/SevenSegmentDisplay.v:15$10.
  creating $alu model for $macc $flatten\display_module.$add$/openlane/designs/lab6/src/SevenSegmentDisplay.v:12$8.
  creating $alu model for $macc $flatten\alu.$sub$/openlane/designs/lab6/src/ALU.v:16$22.
  creating $alu model for $macc $flatten\alu.$sub$/openlane/designs/lab6/src/ALU.v:12$18.
  creating $alu model for $macc $flatten\alu.$add$/openlane/designs/lab6/src/ALU.v:15$21.
  creating $alu model for $macc $flatten\alu.$add$/openlane/designs/lab6/src/ALU.v:11$17.
  creating $alu cell for $flatten\alu.$add$/openlane/designs/lab6/src/ALU.v:11$17: $auto$alumacc.cc:485:replace_alu$98
  creating $alu cell for $flatten\alu.$add$/openlane/designs/lab6/src/ALU.v:15$21: $auto$alumacc.cc:485:replace_alu$101
  creating $alu cell for $flatten\alu.$sub$/openlane/designs/lab6/src/ALU.v:12$18: $auto$alumacc.cc:485:replace_alu$104
  creating $alu cell for $flatten\alu.$sub$/openlane/designs/lab6/src/ALU.v:16$22: $auto$alumacc.cc:485:replace_alu$107
  creating $alu cell for $flatten\display_module.$add$/openlane/designs/lab6/src/SevenSegmentDisplay.v:12$8: $auto$alumacc.cc:485:replace_alu$110
  creating $alu cell for $flatten\display_module.$add$/openlane/designs/lab6/src/SevenSegmentDisplay.v:15$10: $auto$alumacc.cc:485:replace_alu$113
  creating $alu cell for $flatten\pc_module.$add$/openlane/designs/lab6/src/ProgramCounter.v:16$15: $auto$alumacc.cc:485:replace_alu$116
  created 7 $alu and 0 $macc cells.

37. Executing SHARE pass (SAT-based resource sharing).
Found 4 cells in module TopModule that may be considered for resource sharing.
  Analyzing resource sharing options for $flatten\regfile.$memrd$\registers$/openlane/designs/lab6/src/RegisterFile.v:20$33 ($memrd):
    Found 5 activation_patterns using ctrl signal { $flatten\alu.$procmux$62_CMP $flatten\alu.$procmux$61_CMP $flatten\alu.$procmux$60_CMP $flatten\alu.$procmux$59_CMP $eq$/openlane/designs/lab6/src/TopModule.v:32$1_Y }.
    Found 1 candidates: $flatten\regfile.$memrd$\registers$/openlane/designs/lab6/src/RegisterFile.v:19$32
    Analyzing resource sharing with $flatten\regfile.$memrd$\registers$/openlane/designs/lab6/src/RegisterFile.v:19$32 ($memrd):
      Found 7 activation_patterns using ctrl signal { $flatten\alu.$procmux$62_CMP $flatten\alu.$procmux$61_CMP $flatten\alu.$procmux$60_CMP $flatten\alu.$procmux$59_CMP $flatten\alu.$procmux$58_CMP $eq$/openlane/designs/lab6/src/TopModule.v:32$1_Y $flatten\alu.$procmux$57_CMP }.
      Forbidden control signals for this pair of cells: { \pc_module.doBranch $logic_and$/openlane/designs/lab6/src/TopModule.v:33$4_Y }
      Activation pattern for cell $flatten\regfile.$memrd$\registers$/openlane/designs/lab6/src/RegisterFile.v:20$33: $eq$/openlane/designs/lab6/src/TopModule.v:32$1_Y = 1'0
      Activation pattern for cell $flatten\regfile.$memrd$\registers$/openlane/designs/lab6/src/RegisterFile.v:20$33: $flatten\alu.$procmux$62_CMP = 1'1
      Activation pattern for cell $flatten\regfile.$memrd$\registers$/openlane/designs/lab6/src/RegisterFile.v:20$33: $flatten\alu.$procmux$60_CMP = 1'1
      Activation pattern for cell $flatten\regfile.$memrd$\registers$/openlane/designs/lab6/src/RegisterFile.v:20$33: $flatten\alu.$procmux$59_CMP = 1'1
      Activation pattern for cell $flatten\regfile.$memrd$\registers$/openlane/designs/lab6/src/RegisterFile.v:20$33: $flatten\alu.$procmux$61_CMP = 1'1
      Activation pattern for cell $flatten\regfile.$memrd$\registers$/openlane/designs/lab6/src/RegisterFile.v:19$32: $eq$/openlane/designs/lab6/src/TopModule.v:32$1_Y = 1'0
      Activation pattern for cell $flatten\regfile.$memrd$\registers$/openlane/designs/lab6/src/RegisterFile.v:19$32: $flatten\alu.$procmux$62_CMP = 1'1
      Activation pattern for cell $flatten\regfile.$memrd$\registers$/openlane/designs/lab6/src/RegisterFile.v:19$32: $flatten\alu.$procmux$58_CMP = 1'1
      Activation pattern for cell $flatten\regfile.$memrd$\registers$/openlane/designs/lab6/src/RegisterFile.v:19$32: $flatten\alu.$procmux$60_CMP = 1'1
      Activation pattern for cell $flatten\regfile.$memrd$\registers$/openlane/designs/lab6/src/RegisterFile.v:19$32: $flatten\alu.$procmux$59_CMP = 1'1
      Activation pattern for cell $flatten\regfile.$memrd$\registers$/openlane/designs/lab6/src/RegisterFile.v:19$32: $flatten\alu.$procmux$61_CMP = 1'1
      Activation pattern for cell $flatten\regfile.$memrd$\registers$/openlane/designs/lab6/src/RegisterFile.v:19$32: $flatten\alu.$procmux$57_CMP = 1'1
      Size of SAT problem: 0 cells, 79 variables, 230 clauses
      According to the SAT solver this pair of cells can not be shared.
      Model from SAT solver: { $flatten\alu.$procmux$62_CMP $flatten\alu.$procmux$61_CMP $flatten\alu.$procmux$60_CMP $flatten\alu.$procmux$59_CMP $flatten\alu.$procmux$58_CMP $eq$/openlane/designs/lab6/src/TopModule.v:32$1_Y $flatten\alu.$procmux$57_CMP } = 7'1000000
  Analyzing resource sharing options for $flatten\regfile.$memrd$\registers$/openlane/designs/lab6/src/RegisterFile.v:19$32 ($memrd):
    Found 7 activation_patterns using ctrl signal { $flatten\alu.$procmux$62_CMP $flatten\alu.$procmux$61_CMP $flatten\alu.$procmux$60_CMP $flatten\alu.$procmux$59_CMP $flatten\alu.$procmux$58_CMP $eq$/openlane/designs/lab6/src/TopModule.v:32$1_Y $flatten\alu.$procmux$57_CMP }.
    No candidates found.
  Analyzing resource sharing options for $flatten\alu.$shr$/openlane/designs/lab6/src/ALU.v:14$20 ($shr):
    Found 1 activation_patterns using ctrl signal $flatten\alu.$procmux$59_CMP.
    No candidates found.
  Analyzing resource sharing options for $flatten\alu.$shl$/openlane/designs/lab6/src/ALU.v:13$19 ($shl):
    Found 1 activation_patterns using ctrl signal $flatten\alu.$procmux$60_CMP.
    No candidates found.

38. Executing OPT pass (performing simple optimizations).

38.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module TopModule.

38.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\TopModule'.
Removed a total of 0 cells.

38.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \TopModule..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~5 debug messages>

38.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \TopModule.
Performed a total of 0 changes.

38.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\TopModule'.
Removed a total of 0 cells.

38.6. Executing OPT_DFF pass (perform DFF optimizations).

38.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \TopModule..

38.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module TopModule.

38.9. Finished OPT passes. (There is nothing left to do.)

39. Executing MEMORY pass.

39.1. Executing OPT_MEM pass (optimize memories).
TopModule.$flatten\imem.$auto$proc_rom.cc:150:do_switch$44: removing const-0 lane 4
TopModule.$flatten\imem.$auto$proc_rom.cc:150:do_switch$44: removing const-0 lane 5
TopModule.$flatten\imem.$auto$proc_rom.cc:150:do_switch$44: removing const-0 lane 6
TopModule.$flatten\imem.$auto$proc_rom.cc:150:do_switch$44: removing const-0 lane 7
TopModule.$flatten\imem.$auto$proc_rom.cc:150:do_switch$44: removing const-0 lane 8
TopModule.$flatten\imem.$auto$proc_rom.cc:150:do_switch$44: removing const-0 lane 9
TopModule.$flatten\imem.$auto$proc_rom.cc:150:do_switch$44: removing const-0 lane 10
TopModule.$flatten\imem.$auto$proc_rom.cc:150:do_switch$44: removing const-0 lane 29
TopModule.$flatten\imem.$auto$proc_rom.cc:150:do_switch$44: removing const-0 lane 30
TopModule.$flatten\imem.$auto$proc_rom.cc:150:do_switch$44: removing const-0 lane 31
Performed a total of 1 transformations.

39.2. Executing OPT_MEM_PRIORITY pass (removing unnecessary memory write priority relations).
Performed a total of 0 transformations.

39.3. Executing OPT_MEM_FEEDBACK pass (finding memory read-to-write feedback paths).
  Analyzing TopModule.regfile.registers write port 0.

39.4. Executing MEMORY_BMUX2ROM pass (converting muxes to ROMs).

39.5. Executing MEMORY_DFF pass (merging $dff cells to $memrd).
Checking read port `$flatten\display_module.$auto$proc_rom.cc:150:do_switch$40'[0] in module `\TopModule': no output FF found.
Checking read port `$flatten\imem.$auto$proc_rom.cc:150:do_switch$44'[0] in module `\TopModule': no output FF found.
Checking read port `\regfile.registers'[0] in module `\TopModule': no output FF found.
Checking read port `\regfile.registers'[1] in module `\TopModule': no output FF found.
Checking read port address `$flatten\display_module.$auto$proc_rom.cc:150:do_switch$40'[0] in module `\TopModule': no address FF found.
Checking read port address `$flatten\imem.$auto$proc_rom.cc:150:do_switch$44'[0] in module `\TopModule': address FF has async set and/or reset, not supported.
Checking read port address `\regfile.registers'[0] in module `\TopModule': no address FF found.
Checking read port address `\regfile.registers'[1] in module `\TopModule': no address FF found.

39.6. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \TopModule..

39.7. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).
Consolidating read ports of memory TopModule.regfile.registers by address:

39.8. Executing OPT_MEM_WIDEN pass (optimize memories where all ports are wide).
Performed a total of 0 transformations.

39.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \TopModule..

39.10. Executing MEMORY_COLLECT pass (generating $mem cells).

40. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \TopModule..

41. Executing OPT pass (performing simple optimizations).

41.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module TopModule.
<suppressed ~17 debug messages>

41.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\TopModule'.
Removed a total of 0 cells.

41.3. Executing OPT_DFF pass (perform DFF optimizations).

41.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \TopModule..
Removed 3 unused cells and 17 unused wires.
<suppressed ~4 debug messages>

41.5. Finished fast OPT passes.

42. Executing MEMORY_MAP pass (converting memories to logic and flip-flops).
Mapping memory $flatten\display_module.$auto$proc_rom.cc:150:do_switch$40 in module \TopModule:
  created 16 $dff cells and 0 static cells of width 7.
  read interface: 0 $dff and 15 $mux cells.
  write interface: 0 write mux blocks.
Mapping memory $flatten\imem.$auto$proc_rom.cc:150:do_switch$44 in module \TopModule:
  created 32 $dff cells and 0 static cells of width 22.
  read interface: 0 $dff and 31 $mux cells.
  write interface: 0 write mux blocks.
Mapping memory \regfile.registers in module \TopModule:
  created 32 $dff cells and 0 static cells of width 32.
  read interface: 0 $dff and 62 $mux cells.
  write interface: 32 write mux blocks.

43. Executing OPT pass (performing simple optimizations).

43.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module TopModule.
<suppressed ~22 debug messages>

43.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\TopModule'.
Removed a total of 0 cells.

43.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \TopModule..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 1/7 on $pmux $flatten\alu.$procmux$56.
    dead port 2/7 on $pmux $flatten\alu.$procmux$56.
    dead port 3/7 on $pmux $flatten\alu.$procmux$56.
    dead port 4/7 on $pmux $flatten\alu.$procmux$56.
    dead port 5/7 on $pmux $flatten\alu.$procmux$56.
    dead port 6/7 on $pmux $flatten\alu.$procmux$56.
Removed 6 multiplexer ports.
<suppressed ~39 debug messages>

43.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \TopModule.
    Consolidated identical input bits for $mux cell $memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][4][10]$247:
      Old ports: A=22'1100010100101000000001, B=22'0000000000000000001110, Y=$memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][3][5]$a$209
      New ports: A=2'01, B=2'10, Y=$memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][3][5]$a$209 [1:0]
      New connections: $memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][3][5]$a$209 [21:2] = { $memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][3][5]$a$209 [0] $memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][3][5]$a$209 [0] 3'000 $memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][3][5]$a$209 [0] 1'0 $memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][3][5]$a$209 [0] 2'00 $memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][3][5]$a$209 [0] 1'0 $memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][3][5]$a$209 [0] 5'00000 $memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][3][5]$a$209 [1] $memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][3][5]$a$209 [1] }
    Consolidated identical input bits for $mux cell $memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][4][9]$244:
      Old ports: A=22'0100011100000001100000, B=22'0100100000000001110000, Y=$memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][3][4]$b$207
      New ports: A=2'10, B=2'01, Y={ $memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][3][4]$b$207 [14] $memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][3][4]$b$207 [4] }
      New connections: { $memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][3][4]$b$207 [21:15] $memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][3][4]$b$207 [13:5] $memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][3][4]$b$207 [3:0] } = { 4'0100 $memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][3][4]$b$207 [4] $memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][3][4]$b$207 [14] $memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][3][4]$b$207 [14] 13'0000000110000 }
    Consolidated identical input bits for $mux cell $memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][4][8]$241:
      Old ports: A=22'1100000000111000000001, B=22'0100011000111010000000, Y=$memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][3][4]$a$206
      New ports: A=2'01, B=2'10, Y={ $memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][3][4]$a$206 [7] $memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][3][4]$a$206 [0] }
      New connections: { $memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][3][4]$a$206 [21:8] $memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][3][4]$a$206 [6:1] } = { $memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][3][4]$a$206 [0] 4'1000 $memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][3][4]$a$206 [7] $memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][3][4]$a$206 [7] 13'0001110000000 }
    Consolidated identical input bits for $mux cell $memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][4][7]$238:
      Old ports: A=22'0010010000101000000111, B=22'1100000000110000000001, Y=$memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][3][3]$b$204
      New ports: A=2'01, B=2'10, Y={ $memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][3][3]$b$204 [10] $memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][3][3]$b$204 [1] }
      New connections: { $memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][3][3]$b$204 [21:11] $memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][3][3]$b$204 [9:2] $memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][3][3]$b$204 [0] } = { $memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][3][3]$b$204 [10] $memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][3][3]$b$204 [10] $memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][3][3]$b$204 [1] 2'00 $memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][3][3]$b$204 [1] 5'00001 $memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][3][3]$b$204 [1] 6'000000 $memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][3][3]$b$204 [1] 1'1 }
    Consolidated identical input bits for $mux cell $memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][4][6]$235:
      Old ports: A=22'1100000000100000000100, B=22'0100000000000001010000, Y=$memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][3][3]$a$203
      New ports: A=2'01, B=2'10, Y={ $memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][3][3]$a$203 [4] $memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][3][3]$a$203 [2] }
      New connections: { $memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][3][3]$a$203 [21:5] $memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][3][3]$a$203 [3] $memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][3][3]$a$203 [1:0] } = { $memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][3][3]$a$203 [2] 9'100000000 $memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][3][3]$a$203 [2] 4'0000 $memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][3][3]$a$203 [4] 4'0000 }
    Consolidated identical input bits for $mux cell $memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][4][2]$223:
      Old ports: A=22'1100000010101000000010, B=22'0000000000000000001100, Y=$memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][3][1]$a$197
      New ports: A=2'01, B=2'10, Y=$memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][3][1]$a$197 [2:1]
      New connections: { $memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][3][1]$a$197 [21:3] $memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][3][1]$a$197 [0] } = { $memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][3][1]$a$197 [1] $memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][3][1]$a$197 [1] 6'000000 $memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][3][1]$a$197 [1] 1'0 $memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][3][1]$a$197 [1] 1'0 $memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][3][1]$a$197 [1] 5'00000 $memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][3][1]$a$197 [2] 1'0 }
    Consolidated identical input bits for $mux cell $memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][4][1]$220:
      Old ports: A=22'0100101001111110010000, B=22'1111100110100000000101, Y=$memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][3][0]$b$195
      New ports: A=2'10, B=2'01, Y={ $memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][3][0]$b$195 [4] $memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][3][0]$b$195 [0] }
      New connections: { $memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][3][0]$b$195 [21:5] $memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][3][0]$b$195 [3:1] } = { $memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][3][0]$b$195 [0] 1'1 $memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][3][0]$b$195 [0] $memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][3][0]$b$195 [0] 2'10 $memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][3][0]$b$195 [4] $memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][3][0]$b$195 [0] $memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][3][0]$b$195 [0] $memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][3][0]$b$195 [4] 1'1 $memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][3][0]$b$195 [4] $memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][3][0]$b$195 [4] $memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][3][0]$b$195 [4] $memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][3][0]$b$195 [4] 3'000 $memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][3][0]$b$195 [0] 1'0 }
    Consolidated identical input bits for $mux cell $memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][4][0]$217:
      Old ports: A=22'1100000001010000001010, B=22'1100000001111000001111, Y=$memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][3][0]$a$194
      New ports: A=1'0, B=1'1, Y=$memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][3][0]$a$194 [0]
      New connections: $memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][3][0]$a$194 [21:1] = { 10'1100000001 $memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][3][0]$a$194 [0] 1'1 $memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][3][0]$a$194 [0] 6'000001 $memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][3][0]$a$194 [0] 1'1 }
    Consolidated identical input bits for $mux cell $memory$flatten\display_module.$auto$proc_rom.cc:150:do_switch$40$rdmux[0][3][6]$166:
      Old ports: A=7'1000110, B=7'0100001, Y=$memory$flatten\display_module.$auto$proc_rom.cc:150:do_switch$40$rdmux[0][2][3]$a$146
      New ports: A=2'10, B=2'01, Y=$memory$flatten\display_module.$auto$proc_rom.cc:150:do_switch$40$rdmux[0][2][3]$a$146 [1:0]
      New connections: $memory$flatten\display_module.$auto$proc_rom.cc:150:do_switch$40$rdmux[0][2][3]$a$146 [6:2] = { $memory$flatten\display_module.$auto$proc_rom.cc:150:do_switch$40$rdmux[0][2][3]$a$146 [1:0] 2'00 $memory$flatten\display_module.$auto$proc_rom.cc:150:do_switch$40$rdmux[0][2][3]$a$146 [1] }
    Consolidated identical input bits for $mux cell $memory$flatten\display_module.$auto$proc_rom.cc:150:do_switch$40$rdmux[0][3][5]$163:
      Old ports: A=7'0001000, B=7'0000011, Y=$memory$flatten\display_module.$auto$proc_rom.cc:150:do_switch$40$rdmux[0][2][2]$b$144
      New ports: A=2'10, B=2'01, Y={ $memory$flatten\display_module.$auto$proc_rom.cc:150:do_switch$40$rdmux[0][2][2]$b$144 [3] $memory$flatten\display_module.$auto$proc_rom.cc:150:do_switch$40$rdmux[0][2][2]$b$144 [0] }
      New connections: { $memory$flatten\display_module.$auto$proc_rom.cc:150:do_switch$40$rdmux[0][2][2]$b$144 [6:4] $memory$flatten\display_module.$auto$proc_rom.cc:150:do_switch$40$rdmux[0][2][2]$b$144 [2:1] } = { 4'0000 $memory$flatten\display_module.$auto$proc_rom.cc:150:do_switch$40$rdmux[0][2][2]$b$144 [0] }
    Consolidated identical input bits for $mux cell $memory$flatten\display_module.$auto$proc_rom.cc:150:do_switch$40$rdmux[0][3][4]$160:
      Old ports: A=7'0000000, B=7'0010000, Y=$memory$flatten\display_module.$auto$proc_rom.cc:150:do_switch$40$rdmux[0][2][2]$a$143
      New ports: A=1'0, B=1'1, Y=$memory$flatten\display_module.$auto$proc_rom.cc:150:do_switch$40$rdmux[0][2][2]$a$143 [4]
      New connections: { $memory$flatten\display_module.$auto$proc_rom.cc:150:do_switch$40$rdmux[0][2][2]$a$143 [6:5] $memory$flatten\display_module.$auto$proc_rom.cc:150:do_switch$40$rdmux[0][2][2]$a$143 [3:0] } = 6'000000
    Consolidated identical input bits for $mux cell $memory$flatten\display_module.$auto$proc_rom.cc:150:do_switch$40$rdmux[0][3][3]$157:
      Old ports: A=7'0000010, B=7'1111000, Y=$memory$flatten\display_module.$auto$proc_rom.cc:150:do_switch$40$rdmux[0][2][1]$b$141
      New ports: A=2'01, B=2'10, Y={ $memory$flatten\display_module.$auto$proc_rom.cc:150:do_switch$40$rdmux[0][2][1]$b$141 [3] $memory$flatten\display_module.$auto$proc_rom.cc:150:do_switch$40$rdmux[0][2][1]$b$141 [1] }
      New connections: { $memory$flatten\display_module.$auto$proc_rom.cc:150:do_switch$40$rdmux[0][2][1]$b$141 [6:4] $memory$flatten\display_module.$auto$proc_rom.cc:150:do_switch$40$rdmux[0][2][1]$b$141 [2] $memory$flatten\display_module.$auto$proc_rom.cc:150:do_switch$40$rdmux[0][2][1]$b$141 [0] } = { $memory$flatten\display_module.$auto$proc_rom.cc:150:do_switch$40$rdmux[0][2][1]$b$141 [3] $memory$flatten\display_module.$auto$proc_rom.cc:150:do_switch$40$rdmux[0][2][1]$b$141 [3] $memory$flatten\display_module.$auto$proc_rom.cc:150:do_switch$40$rdmux[0][2][1]$b$141 [3] 2'00 }
    Consolidated identical input bits for $mux cell $memory$flatten\display_module.$auto$proc_rom.cc:150:do_switch$40$rdmux[0][3][2]$154:
      Old ports: A=7'0011001, B=7'0010010, Y=$memory$flatten\display_module.$auto$proc_rom.cc:150:do_switch$40$rdmux[0][2][1]$a$140
      New ports: A=2'01, B=2'10, Y=$memory$flatten\display_module.$auto$proc_rom.cc:150:do_switch$40$rdmux[0][2][1]$a$140 [1:0]
      New connections: $memory$flatten\display_module.$auto$proc_rom.cc:150:do_switch$40$rdmux[0][2][1]$a$140 [6:2] = { 3'001 $memory$flatten\display_module.$auto$proc_rom.cc:150:do_switch$40$rdmux[0][2][1]$a$140 [0] 1'0 }
    Consolidated identical input bits for $mux cell $memory$flatten\display_module.$auto$proc_rom.cc:150:do_switch$40$rdmux[0][3][1]$151:
      Old ports: A=7'0100100, B=7'0110000, Y=$memory$flatten\display_module.$auto$proc_rom.cc:150:do_switch$40$rdmux[0][2][0]$b$138
      New ports: A=2'01, B=2'10, Y={ $memory$flatten\display_module.$auto$proc_rom.cc:150:do_switch$40$rdmux[0][2][0]$b$138 [4] $memory$flatten\display_module.$auto$proc_rom.cc:150:do_switch$40$rdmux[0][2][0]$b$138 [2] }
      New connections: { $memory$flatten\display_module.$auto$proc_rom.cc:150:do_switch$40$rdmux[0][2][0]$b$138 [6:5] $memory$flatten\display_module.$auto$proc_rom.cc:150:do_switch$40$rdmux[0][2][0]$b$138 [3] $memory$flatten\display_module.$auto$proc_rom.cc:150:do_switch$40$rdmux[0][2][0]$b$138 [1:0] } = 5'01000
    Consolidated identical input bits for $mux cell $memory$flatten\display_module.$auto$proc_rom.cc:150:do_switch$40$rdmux[0][3][0]$148:
      Old ports: A=7'1000000, B=7'1111001, Y=$memory$flatten\display_module.$auto$proc_rom.cc:150:do_switch$40$rdmux[0][2][0]$a$137
      New ports: A=1'0, B=1'1, Y=$memory$flatten\display_module.$auto$proc_rom.cc:150:do_switch$40$rdmux[0][2][0]$a$137 [0]
      New connections: $memory$flatten\display_module.$auto$proc_rom.cc:150:do_switch$40$rdmux[0][2][0]$a$137 [6:1] = { 1'1 $memory$flatten\display_module.$auto$proc_rom.cc:150:do_switch$40$rdmux[0][2][0]$a$137 [0] $memory$flatten\display_module.$auto$proc_rom.cc:150:do_switch$40$rdmux[0][2][0]$a$137 [0] $memory$flatten\display_module.$auto$proc_rom.cc:150:do_switch$40$rdmux[0][2][0]$a$137 [0] 2'00 }
    Consolidated identical input bits for $mux cell $memory$flatten\display_module.$auto$proc_rom.cc:150:do_switch$40$rdmux[0][3][7]$169:
      Old ports: A=7'0000110, B=7'0001110, Y=$memory$flatten\display_module.$auto$proc_rom.cc:150:do_switch$40$rdmux[0][2][3]$b$147
      New ports: A=1'0, B=1'1, Y=$memory$flatten\display_module.$auto$proc_rom.cc:150:do_switch$40$rdmux[0][2][3]$b$147 [3]
      New connections: { $memory$flatten\display_module.$auto$proc_rom.cc:150:do_switch$40$rdmux[0][2][3]$b$147 [6:4] $memory$flatten\display_module.$auto$proc_rom.cc:150:do_switch$40$rdmux[0][2][3]$b$147 [2:0] } = 6'000110
    Consolidated identical input bits for $pmux cell $flatten\display_module.$procmux$75:
      Old ports: A=\alu.Result [3:0], B={ \alu.Result [7:4] \alu.Result [11:8] \alu.Result [15:12] }, Y=\display_module.digit
      New connections: \display_module.digit = 4'0000
  Optimizing cells in module \TopModule.
    Consolidated identical input bits for $mux cell $memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][3][5]$208:
      Old ports: A=$memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][3][5]$a$209, B=22'0000000000000000000000, Y=$memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][2][2]$b$189
      New ports: A=$memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][3][5]$a$209 [1:0], B=2'00, Y=$memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][2][2]$b$189 [1:0]
      New connections: $memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][2][2]$b$189 [21:2] = { $memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][2][2]$b$189 [0] $memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][2][2]$b$189 [0] 3'000 $memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][2][2]$b$189 [0] 1'0 $memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][2][2]$b$189 [0] 2'00 $memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][2][2]$b$189 [0] 1'0 $memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][2][2]$b$189 [0] 5'00000 $memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][2][2]$b$189 [1] $memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][2][2]$b$189 [1] }
    Consolidated identical input bits for $mux cell $memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][3][4]$205:
      Old ports: A=$memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][3][4]$a$206, B=$memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][3][4]$b$207, Y=$memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][2][2]$a$188
      New ports: A={ $memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][3][4]$a$206 [7] 2'01 $memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][3][4]$a$206 [7] 2'00 $memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][3][4]$a$206 [0] }, B={ $memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][3][4]$b$207 [14] $memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][3][4]$b$207 [14] 3'001 $memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][3][4]$b$207 [4] 1'0 }, Y={ $memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][2][2]$a$188 [15:14] $memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][2][2]$a$188 [9] $memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][2][2]$a$188 [7] $memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][2][2]$a$188 [5:4] $memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][2][2]$a$188 [0] }
      New connections: { $memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][2][2]$a$188 [21:16] $memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][2][2]$a$188 [13:10] $memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][2][2]$a$188 [8] $memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][2][2]$a$188 [6] $memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][2][2]$a$188 [3:1] } = { $memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][2][2]$a$188 [0] 3'100 $memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][2][2]$a$188 [4] $memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][2][2]$a$188 [15] 2'00 $memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][2][2]$a$188 [9] $memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][2][2]$a$188 [9] 1'0 $memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][2][2]$a$188 [5] 3'000 }
    Consolidated identical input bits for $mux cell $memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][3][3]$202:
      Old ports: A=$memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][3][3]$a$203, B=$memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][3][3]$b$204, Y=$memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][2][1]$b$186
      New ports: A={ $memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][3][3]$a$203 [2] 1'1 $memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][3][3]$a$203 [2] 1'0 $memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][3][3]$a$203 [4] $memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][3][3]$a$203 [2] 2'00 }, B={ $memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][3][3]$b$204 [10] $memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][3][3]$b$204 [10] 1'1 $memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][3][3]$b$204 [10] 1'0 $memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][3][3]$b$204 [1] $memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][3][3]$b$204 [1] 1'1 }, Y={ $memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][2][1]$b$186 [21:20] $memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][2][1]$b$186 [11:10] $memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][2][1]$b$186 [4] $memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][2][1]$b$186 [2:0] }
      New connections: { $memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][2][1]$b$186 [19:12] $memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][2][1]$b$186 [9:5] $memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][2][1]$b$186 [3] } = { $memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][2][1]$b$186 [1] 2'00 $memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][2][1]$b$186 [1] 4'0000 $memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][2][1]$b$186 [1] 2'00 $memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][2][1]$b$186 [4] 2'00 }
    Consolidated identical input bits for $mux cell $memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][3][1]$196:
      Old ports: A=$memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][3][1]$a$197, B=22'0000000000000000000000, Y=$memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][2][0]$b$183
      New ports: A=$memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][3][1]$a$197 [2:1], B=2'00, Y=$memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][2][0]$b$183 [2:1]
      New connections: { $memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][2][0]$b$183 [21:3] $memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][2][0]$b$183 [0] } = { $memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][2][0]$b$183 [1] $memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][2][0]$b$183 [1] 6'000000 $memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][2][0]$b$183 [1] 1'0 $memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][2][0]$b$183 [1] 1'0 $memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][2][0]$b$183 [1] 5'00000 $memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][2][0]$b$183 [2] 1'0 }
    Consolidated identical input bits for $mux cell $memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][3][0]$193:
      Old ports: A=$memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][3][0]$a$194, B=$memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][3][0]$b$195, Y=$memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][2][0]$a$182
      New ports: A={ 3'100 $memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][3][0]$a$194 [0] 1'1 $memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][3][0]$a$194 [0] 2'01 $memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][3][0]$a$194 [0] }, B={ $memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][3][0]$b$195 [0] 1'1 $memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][3][0]$b$195 [0] 1'1 $memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][3][0]$b$195 [4] $memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][3][0]$b$195 [4] $memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][3][0]$b$195 [4] 1'0 $memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][3][0]$b$195 [0] }, Y={ $memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][2][0]$a$182 [21] $memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][2][0]$a$182 [17] $memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][2][0]$a$182 [13] $memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][2][0]$a$182 [11:9] $memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][2][0]$a$182 [4] $memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][2][0]$a$182 [1:0] }
      New connections: { $memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][2][0]$a$182 [20:18] $memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][2][0]$a$182 [16:14] $memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][2][0]$a$182 [12] $memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][2][0]$a$182 [8:5] $memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][2][0]$a$182 [3:2] } = { 1'1 $memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][2][0]$a$182 [13] $memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][2][0]$a$182 [13] 1'0 $memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][2][0]$a$182 [4] $memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][2][0]$a$182 [13] $memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][2][0]$a$182 [10] $memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][2][0]$a$182 [4] $memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][2][0]$a$182 [4] 2'00 $memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][2][0]$a$182 [1:0] }
    Consolidated identical input bits for $mux cell $memory$flatten\display_module.$auto$proc_rom.cc:150:do_switch$40$rdmux[0][2][3]$145:
      Old ports: A=$memory$flatten\display_module.$auto$proc_rom.cc:150:do_switch$40$rdmux[0][2][3]$a$146, B=$memory$flatten\display_module.$auto$proc_rom.cc:150:do_switch$40$rdmux[0][2][3]$b$147, Y=$memory$flatten\display_module.$auto$proc_rom.cc:150:do_switch$40$rdmux[0][1][1]$b$135
      New ports: A={ $memory$flatten\display_module.$auto$proc_rom.cc:150:do_switch$40$rdmux[0][2][3]$a$146 [1] 1'0 $memory$flatten\display_module.$auto$proc_rom.cc:150:do_switch$40$rdmux[0][2][3]$a$146 [1:0] }, B={ 1'0 $memory$flatten\display_module.$auto$proc_rom.cc:150:do_switch$40$rdmux[0][2][3]$b$147 [3] 2'10 }, Y={ $memory$flatten\display_module.$auto$proc_rom.cc:150:do_switch$40$rdmux[0][1][1]$b$135 [6] $memory$flatten\display_module.$auto$proc_rom.cc:150:do_switch$40$rdmux[0][1][1]$b$135 [3] $memory$flatten\display_module.$auto$proc_rom.cc:150:do_switch$40$rdmux[0][1][1]$b$135 [1:0] }
      New connections: { $memory$flatten\display_module.$auto$proc_rom.cc:150:do_switch$40$rdmux[0][1][1]$b$135 [5:4] $memory$flatten\display_module.$auto$proc_rom.cc:150:do_switch$40$rdmux[0][1][1]$b$135 [2] } = { $memory$flatten\display_module.$auto$proc_rom.cc:150:do_switch$40$rdmux[0][1][1]$b$135 [0] 1'0 $memory$flatten\display_module.$auto$proc_rom.cc:150:do_switch$40$rdmux[0][1][1]$b$135 [1] }
    Consolidated identical input bits for $mux cell $memory$flatten\display_module.$auto$proc_rom.cc:150:do_switch$40$rdmux[0][2][2]$142:
      Old ports: A=$memory$flatten\display_module.$auto$proc_rom.cc:150:do_switch$40$rdmux[0][2][2]$a$143, B=$memory$flatten\display_module.$auto$proc_rom.cc:150:do_switch$40$rdmux[0][2][2]$b$144, Y=$memory$flatten\display_module.$auto$proc_rom.cc:150:do_switch$40$rdmux[0][1][1]$a$134
      New ports: A={ $memory$flatten\display_module.$auto$proc_rom.cc:150:do_switch$40$rdmux[0][2][2]$a$143 [4] 2'00 }, B={ 1'0 $memory$flatten\display_module.$auto$proc_rom.cc:150:do_switch$40$rdmux[0][2][2]$b$144 [3] $memory$flatten\display_module.$auto$proc_rom.cc:150:do_switch$40$rdmux[0][2][2]$b$144 [0] }, Y={ $memory$flatten\display_module.$auto$proc_rom.cc:150:do_switch$40$rdmux[0][1][1]$a$134 [4:3] $memory$flatten\display_module.$auto$proc_rom.cc:150:do_switch$40$rdmux[0][1][1]$a$134 [0] }
      New connections: { $memory$flatten\display_module.$auto$proc_rom.cc:150:do_switch$40$rdmux[0][1][1]$a$134 [6:5] $memory$flatten\display_module.$auto$proc_rom.cc:150:do_switch$40$rdmux[0][1][1]$a$134 [2:1] } = { 3'000 $memory$flatten\display_module.$auto$proc_rom.cc:150:do_switch$40$rdmux[0][1][1]$a$134 [0] }
    Consolidated identical input bits for $mux cell $memory$flatten\display_module.$auto$proc_rom.cc:150:do_switch$40$rdmux[0][2][1]$139:
      Old ports: A=$memory$flatten\display_module.$auto$proc_rom.cc:150:do_switch$40$rdmux[0][2][1]$a$140, B=$memory$flatten\display_module.$auto$proc_rom.cc:150:do_switch$40$rdmux[0][2][1]$b$141, Y=$memory$flatten\display_module.$auto$proc_rom.cc:150:do_switch$40$rdmux[0][1][0]$b$132
      New ports: A={ 2'01 $memory$flatten\display_module.$auto$proc_rom.cc:150:do_switch$40$rdmux[0][2][1]$a$140 [0] $memory$flatten\display_module.$auto$proc_rom.cc:150:do_switch$40$rdmux[0][2][1]$a$140 [1:0] }, B={ $memory$flatten\display_module.$auto$proc_rom.cc:150:do_switch$40$rdmux[0][2][1]$b$141 [3] $memory$flatten\display_module.$auto$proc_rom.cc:150:do_switch$40$rdmux[0][2][1]$b$141 [3] $memory$flatten\display_module.$auto$proc_rom.cc:150:do_switch$40$rdmux[0][2][1]$b$141 [3] $memory$flatten\display_module.$auto$proc_rom.cc:150:do_switch$40$rdmux[0][2][1]$b$141 [1] 1'0 }, Y={ $memory$flatten\display_module.$auto$proc_rom.cc:150:do_switch$40$rdmux[0][1][0]$b$132 [5:3] $memory$flatten\display_module.$auto$proc_rom.cc:150:do_switch$40$rdmux[0][1][0]$b$132 [1:0] }
      New connections: { $memory$flatten\display_module.$auto$proc_rom.cc:150:do_switch$40$rdmux[0][1][0]$b$132 [6] $memory$flatten\display_module.$auto$proc_rom.cc:150:do_switch$40$rdmux[0][1][0]$b$132 [2] } = { $memory$flatten\display_module.$auto$proc_rom.cc:150:do_switch$40$rdmux[0][1][0]$b$132 [5] 1'0 }
    Consolidated identical input bits for $mux cell $memory$flatten\display_module.$auto$proc_rom.cc:150:do_switch$40$rdmux[0][2][0]$136:
      Old ports: A=$memory$flatten\display_module.$auto$proc_rom.cc:150:do_switch$40$rdmux[0][2][0]$a$137, B=$memory$flatten\display_module.$auto$proc_rom.cc:150:do_switch$40$rdmux[0][2][0]$b$138, Y=$memory$flatten\display_module.$auto$proc_rom.cc:150:do_switch$40$rdmux[0][1][0]$a$131
      New ports: A={ 1'1 $memory$flatten\display_module.$auto$proc_rom.cc:150:do_switch$40$rdmux[0][2][0]$a$137 [0] $memory$flatten\display_module.$auto$proc_rom.cc:150:do_switch$40$rdmux[0][2][0]$a$137 [0] 1'0 $memory$flatten\display_module.$auto$proc_rom.cc:150:do_switch$40$rdmux[0][2][0]$a$137 [0] }, B={ 2'01 $memory$flatten\display_module.$auto$proc_rom.cc:150:do_switch$40$rdmux[0][2][0]$b$138 [4] $memory$flatten\display_module.$auto$proc_rom.cc:150:do_switch$40$rdmux[0][2][0]$b$138 [2] 1'0 }, Y={ $memory$flatten\display_module.$auto$proc_rom.cc:150:do_switch$40$rdmux[0][1][0]$a$131 [6:4] $memory$flatten\display_module.$auto$proc_rom.cc:150:do_switch$40$rdmux[0][1][0]$a$131 [2] $memory$flatten\display_module.$auto$proc_rom.cc:150:do_switch$40$rdmux[0][1][0]$a$131 [0] }
      New connections: { $memory$flatten\display_module.$auto$proc_rom.cc:150:do_switch$40$rdmux[0][1][0]$a$131 [3] $memory$flatten\display_module.$auto$proc_rom.cc:150:do_switch$40$rdmux[0][1][0]$a$131 [1] } = { $memory$flatten\display_module.$auto$proc_rom.cc:150:do_switch$40$rdmux[0][1][0]$a$131 [0] 1'0 }
  Optimizing cells in module \TopModule.
    Consolidated identical input bits for $mux cell $memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][2][2]$187:
      Old ports: A=$memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][2][2]$a$188, B=$memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][2][2]$b$189, Y=$memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][1][1]$a$179
      New ports: A={ 1'1 $memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][2][2]$a$188 [15] $memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][2][2]$a$188 [15:14] $memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][2][2]$a$188 [9] $memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][2][2]$a$188 [9] $memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][2][2]$a$188 [7] $memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][2][2]$a$188 [5:4] 1'0 $memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][2][2]$a$188 [0] }, B={ $memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][2][2]$b$189 [0] $memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][2][2]$b$189 [0] 1'0 $memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][2][2]$b$189 [0] 1'0 $memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][2][2]$b$189 [0] 3'000 $memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][2][2]$b$189 [1:0] }, Y={ $memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][1][1]$a$179 [20] $memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][1][1]$a$179 [16:14] $memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][1][1]$a$179 [10:9] $memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][1][1]$a$179 [7] $memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][1][1]$a$179 [5:4] $memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][1][1]$a$179 [1:0] }
      New connections: { $memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][1][1]$a$179 [21] $memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][1][1]$a$179 [19:17] $memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][1][1]$a$179 [13:11] $memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][1][1]$a$179 [8] $memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][1][1]$a$179 [6] $memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][1][1]$a$179 [3:2] } = { $memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][1][1]$a$179 [0] 2'00 $memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][1][1]$a$179 [4] 2'00 $memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][1][1]$a$179 [9] 1'0 $memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][1][1]$a$179 [5] $memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][1][1]$a$179 [1] $memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][1][1]$a$179 [1] }
    Consolidated identical input bits for $mux cell $memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][2][1]$184:
      Old ports: A=22'0000000000000000000000, B=$memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][2][1]$b$186, Y=$memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][1][0]$b$177
      New ports: A=8'00000000, B={ $memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][2][1]$b$186 [21:20] $memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][2][1]$b$186 [11:10] $memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][2][1]$b$186 [4] $memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][2][1]$b$186 [2:0] }, Y={ $memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][1][0]$b$177 [21:20] $memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][1][0]$b$177 [11:10] $memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][1][0]$b$177 [4] $memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][1][0]$b$177 [2:0] }
      New connections: { $memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][1][0]$b$177 [19:12] $memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][1][0]$b$177 [9:5] $memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][1][0]$b$177 [3] } = { $memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][1][0]$b$177 [1] 2'00 $memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][1][0]$b$177 [1] 4'0000 $memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][1][0]$b$177 [1] 2'00 $memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][1][0]$b$177 [4] 2'00 }
    Consolidated identical input bits for $mux cell $memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][2][0]$181:
      Old ports: A=$memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][2][0]$a$182, B=$memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][2][0]$b$183, Y=$memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][1][0]$a$176
      New ports: A={ $memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][2][0]$a$182 [21] 1'1 $memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][2][0]$a$182 [17] $memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][2][0]$a$182 [13] $memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][2][0]$a$182 [13] $memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][2][0]$a$182 [11:9] $memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][2][0]$a$182 [4] $memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][2][0]$a$182 [1:0] $memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][2][0]$a$182 [1:0] }, B={ $memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][2][0]$b$183 [1] $memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][2][0]$b$183 [1] 2'00 $memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][2][0]$b$183 [1] $memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][2][0]$b$183 [1] 1'0 $memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][2][0]$b$183 [1] 1'0 $memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][2][0]$b$183 [2] $memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][2][0]$b$183 [2:1] 1'0 }, Y={ $memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][1][0]$a$176 [21:20] $memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][1][0]$a$176 [17] $memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][1][0]$a$176 [14:13] $memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][1][0]$a$176 [11:9] $memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][1][0]$a$176 [4:0] }
      New connections: { $memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][1][0]$a$176 [19:18] $memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][1][0]$a$176 [16:15] $memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][1][0]$a$176 [12] $memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][1][0]$a$176 [8:5] } = { $memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][1][0]$a$176 [14] $memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][1][0]$a$176 [14] 1'0 $memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][1][0]$a$176 [4] $memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][1][0]$a$176 [10] $memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][1][0]$a$176 [4] $memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][1][0]$a$176 [4] 2'00 }
  Optimizing cells in module \TopModule.
    Consolidated identical input bits for $mux cell $memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][1][1]$178:
      Old ports: A=$memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][1][1]$a$179, B=22'0000000000000000000000, Y=$memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][0][0]$b$174
      New ports: A={ $memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][1][1]$a$179 [20] $memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][1][1]$a$179 [16:14] $memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][1][1]$a$179 [10:9] $memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][1][1]$a$179 [7] $memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][1][1]$a$179 [5:4] $memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][1][1]$a$179 [1:0] }, B=11'00000000000, Y={ $memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][0][0]$b$174 [20] $memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][0][0]$b$174 [16:14] $memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][0][0]$b$174 [10:9] $memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][0][0]$b$174 [7] $memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][0][0]$b$174 [5:4] $memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][0][0]$b$174 [1:0] }
      New connections: { $memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][0][0]$b$174 [21] $memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][0][0]$b$174 [19:17] $memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][0][0]$b$174 [13:11] $memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][0][0]$b$174 [8] $memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][0][0]$b$174 [6] $memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][0][0]$b$174 [3:2] } = { $memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][0][0]$b$174 [0] 2'00 $memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][0][0]$b$174 [4] 2'00 $memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][0][0]$b$174 [9] 1'0 $memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][0][0]$b$174 [5] $memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][0][0]$b$174 [1] $memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][0][0]$b$174 [1] }
    Consolidated identical input bits for $mux cell $memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][1][0]$175:
      Old ports: A=$memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][1][0]$a$176, B=$memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][1][0]$b$177, Y=$memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][0][0]$a$173
      New ports: A={ $memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][1][0]$a$176 [21:20] $memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][1][0]$a$176 [14] $memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][1][0]$a$176 [17] 1'0 $memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][1][0]$a$176 [14:13] $memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][1][0]$a$176 [10] $memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][1][0]$a$176 [11:9] $memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][1][0]$a$176 [4] 1'0 $memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][1][0]$a$176 [4:0] }, B={ $memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][1][0]$b$177 [21:20] $memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][1][0]$b$177 [1] 1'0 $memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][1][0]$b$177 [1] 3'000 $memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][1][0]$b$177 [11:10] $memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][1][0]$b$177 [1] 1'0 $memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][1][0]$b$177 [4] $memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][1][0]$b$177 [4] 1'0 $memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][1][0]$b$177 [2:0] }, Y={ $memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][0][0]$a$173 [21:19] $memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][0][0]$a$173 [17:16] $memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][0][0]$a$173 [14:9] $memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][0][0]$a$173 [7:6] $memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][0][0]$a$173 [4:0] }
      New connections: { $memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][0][0]$a$173 [18] $memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][0][0]$a$173 [15] $memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][0][0]$a$173 [8] $memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][0][0]$a$173 [5] } = { $memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][0][0]$a$173 [14] $memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][0][0]$a$173 [7] $memory$flatten\imem.$auto$proc_rom.cc:150:do_switch$44$rdmux[0][0][0]$a$173 [7] 1'0 }
  Optimizing cells in module \TopModule.
Performed a total of 31 changes.

43.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\TopModule'.
<suppressed ~33 debug messages>
Removed a total of 11 cells.

43.6. Executing OPT_SHARE pass.

43.7. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 4 on $auto$ff.cc:266:slice$92 ($adffe) from module TopModule.

43.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \TopModule..
Removed 199 unused cells and 375 unused wires.
<suppressed ~232 debug messages>

43.9. Executing OPT_EXPR pass (perform const folding).
Optimizing module TopModule.
<suppressed ~29 debug messages>

43.10. Rerunning OPT passes. (Maybe there is more to do..)

43.11. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \TopModule..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~1 debug messages>

43.12. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \TopModule.
Performed a total of 0 changes.

43.13. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\TopModule'.
Removed a total of 0 cells.

43.14. Executing OPT_SHARE pass.

43.15. Executing OPT_DFF pass (perform DFF optimizations).

43.16. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \TopModule..
Removed 0 unused cells and 9 unused wires.
<suppressed ~1 debug messages>

43.17. Executing OPT_EXPR pass (perform const folding).
Optimizing module TopModule.

43.18. Rerunning OPT passes. (Maybe there is more to do..)

43.19. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \TopModule..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~1 debug messages>

43.20. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \TopModule.
Performed a total of 0 changes.

43.21. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\TopModule'.
Removed a total of 0 cells.

43.22. Executing OPT_SHARE pass.

43.23. Executing OPT_DFF pass (perform DFF optimizations).

43.24. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \TopModule..

43.25. Executing OPT_EXPR pass (perform const folding).
Optimizing module TopModule.

43.26. Finished OPT passes. (There is nothing left to do.)

44. Executing TECHMAP pass (map to technology primitives).

44.1. Executing Verilog-2005 frontend: /nix/store/sx2v0i73mn1ih2z1nk61pm9n5gjgpidy-yosys/bin/../share/yosys/techmap.v
Parsing Verilog input from `/nix/store/sx2v0i73mn1ih2z1nk61pm9n5gjgpidy-yosys/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

44.2. Continuing TECHMAP pass.
Using template $paramod$ce0ec84be7047712840b0952f343ee9e63ef75d1\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $sdff.
Using extmapper simplemap for cells of type $dffe.
Using extmapper simplemap for cells of type $eq.
Using template $paramod$c2e415ef15bc3ccd2723772353a6b450d3d76206\_90_pmux for cells of type $pmux.
Using template $paramod$175e67c02b86e96b1288b9dc100122520d7240d8\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $xor.
Using extmapper simplemap for cells of type $and.
Using extmapper simplemap for cells of type $reduce_or.
Using extmapper simplemap for cells of type $pos.
Using extmapper simplemap for cells of type $mux.
Using extmapper simplemap for cells of type $not.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000010100 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000010 for cells of type $lcu.
Using extmapper simplemap for cells of type $or.
No more expansions possible.
<suppressed ~476 debug messages>

45. Executing OPT pass (performing simple optimizations).

45.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module TopModule.
<suppressed ~185 debug messages>

45.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\TopModule'.
<suppressed ~45 debug messages>
Removed a total of 15 cells.

45.3. Executing OPT_DFF pass (perform DFF optimizations).

45.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \TopModule..
Removed 18 unused cells and 147 unused wires.
<suppressed ~19 debug messages>

45.5. Finished fast OPT passes.

46. Executing ABC pass (technology mapping using ABC).

46.1. Extracting gate netlist of module `\TopModule' to `<abc-temp-dir>/input.blif'..
Extracted 92 gates and 116 wires to a netlist network with 22 inputs and 27 outputs.

46.1.1. Executing ABC.
Running ABC command: "/nix/store/wq2q0njg3sx8wvj2akz7x1qxwyrv9xlr-yosys-abc/bin/abc" -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

46.1.2. Re-integrating ABC results.
ABC RESULTS:             ORNOT cells:        8
ABC RESULTS:               NOT cells:        2
ABC RESULTS:              NAND cells:       10
ABC RESULTS:                OR cells:       26
ABC RESULTS:              XNOR cells:        9
ABC RESULTS:            ANDNOT cells:        9
ABC RESULTS:               XOR cells:       11
ABC RESULTS:        internal signals:       67
ABC RESULTS:           input signals:       22
ABC RESULTS:          output signals:       27
Removing temp directory.

47. Executing OPT pass (performing simple optimizations).

47.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module TopModule.

47.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\TopModule'.
Removed a total of 0 cells.

47.3. Executing OPT_DFF pass (perform DFF optimizations).

47.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \TopModule..
Removed 0 unused cells and 78 unused wires.
<suppressed ~1 debug messages>

47.5. Finished fast OPT passes.

48. Executing HIERARCHY pass (managing design hierarchy).

48.1. Analyzing design hierarchy..
Top module:  \TopModule

48.2. Analyzing design hierarchy..
Top module:  \TopModule
Removed 0 unused modules.

49. Printing statistics.

=== TopModule ===

   Number of wires:                104
   Number of wire bits:            727
   Number of public wires:          51
   Number of public wire bits:     634
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 97
     $_ANDNOT_                       9
     $_DFFE_PN_                      2
     $_NAND_                        10
     $_NOT_                          2
     $_ORNOT_                        8
     $_OR_                          26
     $_SDFF_PN0_                    20
     $_XNOR_                         9
     $_XOR_                         11

50. Executing CHECK pass (checking for obvious problems).
Checking module TopModule...
Found and reported 0 problems.

51. Generating Graphviz representation of design.
Writing dot description to `/openlane/designs/lab6/runs/RUN_2025.06.05_16.46.04/tmp/synthesis/post_techmap.dot'.
Dumping module TopModule to page 1.

52. Executing SHARE pass (SAT-based resource sharing).

53. Executing OPT pass (performing simple optimizations).

53.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module TopModule.

53.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\TopModule'.
Removed a total of 0 cells.

53.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \TopModule..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

53.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \TopModule.
Performed a total of 0 changes.

53.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\TopModule'.
Removed a total of 0 cells.

53.6. Executing OPT_DFF pass (perform DFF optimizations).

53.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \TopModule..

53.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module TopModule.

53.9. Finished OPT passes. (There is nothing left to do.)

54. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \TopModule..
Removed 0 unused cells and 44 unused wires.
<suppressed ~44 debug messages>

55. Printing statistics.

=== TopModule ===

   Number of wires:                 60
   Number of wire bits:            129
   Number of public wires:           7
   Number of public wire bits:      36
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 97
     $_ANDNOT_                       9
     $_DFFE_PN_                      2
     $_NAND_                        10
     $_NOT_                          2
     $_ORNOT_                        8
     $_OR_                          26
     $_SDFF_PN0_                    20
     $_XNOR_                         9
     $_XOR_                         11

mapping tbuf

56. Executing TECHMAP pass (map to technology primitives).

56.1. Executing Verilog-2005 frontend: /Users/onurakkaya/.volare/sky130A/libs.tech/openlane/sky130_fd_sc_hd/tribuff_map.v
Parsing Verilog input from `/Users/onurakkaya/.volare/sky130A/libs.tech/openlane/sky130_fd_sc_hd/tribuff_map.v' to AST representation.
Generating RTLIL representation for module `\$_TBUF_'.
Successfully finished Verilog frontend.

56.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~3 debug messages>

57. Executing SIMPLEMAP pass (map simple cells to gate primitives).

58. Executing TECHMAP pass (map to technology primitives).

58.1. Executing Verilog-2005 frontend: /Users/onurakkaya/.volare/sky130A/libs.tech/openlane/sky130_fd_sc_hd/latch_map.v
Parsing Verilog input from `/Users/onurakkaya/.volare/sky130A/libs.tech/openlane/sky130_fd_sc_hd/latch_map.v' to AST representation.
Generating RTLIL representation for module `\$_DLATCH_P_'.
Generating RTLIL representation for module `\$_DLATCH_N_'.
Successfully finished Verilog frontend.

58.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~4 debug messages>

59. Executing SIMPLEMAP pass (map simple cells to gate primitives).

60. Executing DFFLIBMAP pass (mapping DFF cells to sequential cells from liberty file).
  cell sky130_fd_sc_hd__dfxtp_2 (noninv, pins=3, area=21.27) is a direct match for cell type $_DFF_P_.
  cell sky130_fd_sc_hd__dfrtp_2 (noninv, pins=4, area=26.28) is a direct match for cell type $_DFF_PN0_.
  cell sky130_fd_sc_hd__dfstp_2 (noninv, pins=4, area=26.28) is a direct match for cell type $_DFF_PN1_.
  cell sky130_fd_sc_hd__dfbbn_2 (noninv, pins=6, area=35.03) is a direct match for cell type $_DFFSR_NNN_.
  final dff cell mappings:
    unmapped dff cell: $_DFF_N_
    \sky130_fd_sc_hd__dfxtp_2 _DFF_P_ (.CLK( C), .D( D), .Q( Q));
    unmapped dff cell: $_DFF_NN0_
    unmapped dff cell: $_DFF_NN1_
    unmapped dff cell: $_DFF_NP0_
    unmapped dff cell: $_DFF_NP1_
    \sky130_fd_sc_hd__dfrtp_2 _DFF_PN0_ (.CLK( C), .D( D), .Q( Q), .RESET_B( R));
    \sky130_fd_sc_hd__dfstp_2 _DFF_PN1_ (.CLK( C), .D( D), .Q( Q), .SET_B( R));
    unmapped dff cell: $_DFF_PP0_
    unmapped dff cell: $_DFF_PP1_
    \sky130_fd_sc_hd__dfbbn_2 _DFFSR_NNN_ (.CLK_N( C), .D( D), .Q( Q), .Q_N(~Q), .RESET_B( R), .SET_B( S));
    unmapped dff cell: $_DFFSR_NNP_
    unmapped dff cell: $_DFFSR_NPN_
    unmapped dff cell: $_DFFSR_NPP_
    unmapped dff cell: $_DFFSR_PNN_
    unmapped dff cell: $_DFFSR_PNP_
    unmapped dff cell: $_DFFSR_PPN_
    unmapped dff cell: $_DFFSR_PPP_

60.1. Executing DFFLEGALIZE pass (convert FFs to types supported by the target).
Mapping DFF cells in module `\TopModule':
  mapped 22 $_DFF_P_ cells to \sky130_fd_sc_hd__dfxtp_2 cells.

61. Printing statistics.

=== TopModule ===

   Number of wires:                 82
   Number of wire bits:            151
   Number of public wires:           7
   Number of public wire bits:      36
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                119
     $_ANDNOT_                       9
     $_MUX_                         22
     $_NAND_                        10
     $_NOT_                          2
     $_ORNOT_                        8
     $_OR_                          26
     $_XNOR_                         9
     $_XOR_                         11
     sky130_fd_sc_hd__dfxtp_2       22

[INFO]: USING STRATEGY AREA 0

62. Executing ABC pass (technology mapping using ABC).

62.1. Extracting gate netlist of module `\TopModule' to `/tmp/yosys-abc-lVpj7f/input.blif'..
Extracted 97 gates and 120 wires to a netlist network with 22 inputs and 26 outputs.

62.1.1. Executing ABC.
Running ABC command: "/nix/store/wq2q0njg3sx8wvj2akz7x1qxwyrv9xlr-yosys-abc/bin/abc" -s -f /tmp/yosys-abc-lVpj7f/abc.script 2>&1
ABC: ABC command line: "source /tmp/yosys-abc-lVpj7f/abc.script".
ABC: 
ABC: + read_blif /tmp/yosys-abc-lVpj7f/input.blif 
ABC: + read_lib -w /openlane/designs/lab6/runs/RUN_2025.06.05_16.46.04/tmp/synthesis/trimmed.lib 
ABC: Parsing finished successfully.  Parsing time =     0.10 sec
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfbbn_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfrbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfrtp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfrtp_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfsbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfstp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfstp_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfxbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfxtp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfxtp_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxtn_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxtn_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxtn_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxtp_1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__ebufn_2".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__ebufn_4".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__ebufn_8".
ABC: Library "sky130A_merged" from "/openlane/designs/lab6/runs/RUN_2025.06.05_16.46.04/tmp/synthesis/trimmed.lib" has 175 cells (17 skipped: 14 seq; 3 tri-state; 0 no func; 0 dont_use).  Time =     0.15 sec
ABC: Memory =    9.54 MB. Time =     0.15 sec
ABC: Warning: Detected 2 multi-output gates (for example, "sky130_fd_sc_hd__fa_1").
ABC: + read_constr -v /openlane/designs/lab6/runs/RUN_2025.06.05_16.46.04/tmp/synthesis/synthesis.sdc 
ABC: Setting driving cell to be "sky130_fd_sc_hd__inv_2".
ABC: Setting output load to be 33.442001.
ABC: + read_constr /openlane/designs/lab6/runs/RUN_2025.06.05_16.46.04/tmp/synthesis/synthesis.sdc 
ABC: + fx 
ABC: + mfs 
ABC: + strash 
ABC: + drf -l 
ABC: + balance 
ABC: + drw -l 
ABC: + drf -l 
ABC: + balance 
ABC: + drw -l 
ABC: + drw -l -z 
ABC: + balance 
ABC: + drf -l -z 
ABC: + drw -l -z 
ABC: + balance 
ABC: + retime -D -D 10000 -M 5 
ABC: + scleanup 
ABC: Error: The network is combinational.
ABC: + fraig_store 
ABC: + balance 
ABC: + fraig_store 
ABC: + balance 
ABC: + drw -l 
ABC: + drf -l 
ABC: + balance 
ABC: + drw -l 
ABC: + drw -l -z 
ABC: + balance 
ABC: + drf -l -z 
ABC: + drw -l -z 
ABC: + balance 
ABC: + fraig_store 
ABC: + balance 
ABC: + drw -l 
ABC: + drf -l 
ABC: + balance 
ABC: + drw -l 
ABC: + drw -l -z 
ABC: + balance 
ABC: + drf -l -z 
ABC: + drw -l -z 
ABC: + balance 
ABC: + fraig_store 
ABC: + balance 
ABC: + drw -l 
ABC: + drf -l 
ABC: + balance 
ABC: + drw -l 
ABC: + drw -l -z 
ABC: + balance 
ABC: + drf -l -z 
ABC: + drw -l -z 
ABC: + balance 
ABC: + fraig_store 
ABC: + fraig_restore 
ABC: + amap -m -Q 0.1 -F 20 -A 20 -C 5000 
ABC: + retime -D -D 10000 
ABC: + &get -n 
ABC: + &st 
ABC: + &dch 
ABC: + &nf 
ABC: + &put 
ABC: + buffer -N 10 -S 750.0 
ABC: + upsize -D 10000 
ABC: Current delay (2363.63 ps) does not exceed the target delay (10000.00 ps). Upsizing is not performed.
ABC: + dnsize -D 10000 
ABC: + stime -p 
ABC: WireLoad = "none"  Gates =     74 ( 16.2 %)   Cap = 14.6 ff (  3.9 %)   Area =      609.33 ( 83.8 %)   Delay =  2544.65 ps  (  8.1 %)               
ABC: Path  0 --      11 : 0    5 pi                       A =   0.00  Df =  49.0  -27.2 ps  S =  73.8 ps  Cin =  0.0 ff  Cout =  14.7 ff  Cmax =   0.0 ff  G =    0  
ABC: Path  1 --      59 : 4    1 sky130_fd_sc_hd__or4bb_2 A =  12.51  Df = 634.7 -448.2 ps  S =  84.5 ps  Cin =  1.5 ff  Cout =   1.4 ff  Cmax = 312.2 ff  G =   90  
ABC: Path  2 --      60 : 4    1 sky130_fd_sc_hd__or4_2   A =   8.76  Df =1186.1 -901.6 ps  S = 105.9 ps  Cin =  1.5 ff  Cout =   4.6 ff  Cmax = 310.4 ff  G =  286  
ABC: Path  3 --      62 : 4   10 sky130_fd_sc_hd__nor4_2  A =  12.51  Df =1887.8-1519.1 ps  S = 830.7 ps  Cin =  4.3 ff  Cout =  33.8 ff  Cmax =  64.1 ff  G =  743  
ABC: Path  4 --     117 : 2    1 sky130_fd_sc_hd__or2_2   A =   6.26  Df =2105.7-1462.9 ps  S =  49.0 ps  Cin =  1.5 ff  Cout =   1.5 ff  Cmax = 299.4 ff  G =  100  
ABC: Path  5 --     119 : 2    1 sky130_fd_sc_hd__and2_2  A =   7.51  Df =2225.3  -39.1 ps  S =  34.8 ps  Cin =  1.5 ff  Cout =   2.2 ff  Cmax = 303.0 ff  G =  143  
ABC: Path  6 --     120 : 1    1 sky130_fd_sc_hd__buf_1   A =   3.75  Df =2544.7 -144.3 ps  S = 396.2 ps  Cin =  2.1 ff  Cout =  33.4 ff  Cmax = 130.0 ff  G = 1590  
ABC: Start-point = pi10 (\display_module.counter [9]).  End-point = po24 ($auto$rtlil.cc:2684:MuxGate$1378).
ABC: + print_stats -m 
ABC: netlist                       : i/o =   22/   26  lat =    0  nd =    74  edge =    183  area =609.43  delay = 8.00  lev = 8
ABC: + write_blif /tmp/yosys-abc-lVpj7f/output.blif 

62.1.2. Re-integrating ABC results.
ABC RESULTS:   sky130_fd_sc_hd__or2b_2 cells:        2
ABC RESULTS:   sky130_fd_sc_hd__or4b_2 cells:        2
ABC RESULTS:   sky130_fd_sc_hd__or4bb_2 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__or4_2 cells:        2
ABC RESULTS:   sky130_fd_sc_hd__nor4_2 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__o21a_2 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__a311oi_2 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__inv_2 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__a21oi_2 cells:        3
ABC RESULTS:   sky130_fd_sc_hd__and3_2 cells:        5
ABC RESULTS:   sky130_fd_sc_hd__o21ba_2 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__nor2_2 cells:        8
ABC RESULTS:   sky130_fd_sc_hd__nor3_2 cells:        2
ABC RESULTS:   sky130_fd_sc_hd__xnor2_2 cells:        2
ABC RESULTS:   sky130_fd_sc_hd__and4_2 cells:        5
ABC RESULTS:   sky130_fd_sc_hd__a31o_2 cells:        3
ABC RESULTS:   sky130_fd_sc_hd__and2b_2 cells:        2
ABC RESULTS:   sky130_fd_sc_hd__xor2_2 cells:        4
ABC RESULTS:   sky130_fd_sc_hd__or2_2 cells:        4
ABC RESULTS:   sky130_fd_sc_hd__nand2_2 cells:        5
ABC RESULTS:   sky130_fd_sc_hd__and2_2 cells:        4
ABC RESULTS:   sky130_fd_sc_hd__buf_1 cells:       11
ABC RESULTS:   sky130_fd_sc_hd__and3b_2 cells:        3
ABC RESULTS:   sky130_fd_sc_hd__a21o_2 cells:        1
ABC RESULTS:        internal signals:       72
ABC RESULTS:           input signals:       22
ABC RESULTS:          output signals:       26
Removing temp directory.

63. Executing SETUNDEF pass (replace undef values with defined constants).

64. Executing HILOMAP pass (mapping to constant drivers).

65. Executing SPLITNETS pass (splitting up multi-bit signals).

66. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \TopModule..
Removed 0 unused cells and 148 unused wires.
<suppressed ~1 debug messages>

67. Executing INSBUF pass (insert buffer cells for connected wires).

68. Executing CHECK pass (checking for obvious problems).
Checking module TopModule...
Found and reported 0 problems.

69. Printing statistics.

=== TopModule ===

   Number of wires:                 97
   Number of wire bits:            106
   Number of public wires:          27
   Number of public wire bits:      36
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                103
     sky130_fd_sc_hd__a21o_2         1
     sky130_fd_sc_hd__a21oi_2        3
     sky130_fd_sc_hd__a311oi_2       1
     sky130_fd_sc_hd__a31o_2         3
     sky130_fd_sc_hd__and2_2         4
     sky130_fd_sc_hd__and2b_2        2
     sky130_fd_sc_hd__and3_2         5
     sky130_fd_sc_hd__and3b_2        3
     sky130_fd_sc_hd__and4_2         5
     sky130_fd_sc_hd__buf_1         11
     sky130_fd_sc_hd__conb_1         7
     sky130_fd_sc_hd__dfxtp_2       22
     sky130_fd_sc_hd__inv_2          1
     sky130_fd_sc_hd__nand2_2        5
     sky130_fd_sc_hd__nor2_2         8
     sky130_fd_sc_hd__nor3_2         2
     sky130_fd_sc_hd__nor4_2         1
     sky130_fd_sc_hd__o21a_2         1
     sky130_fd_sc_hd__o21ba_2        1
     sky130_fd_sc_hd__or2_2          4
     sky130_fd_sc_hd__or2b_2         2
     sky130_fd_sc_hd__or4_2          2
     sky130_fd_sc_hd__or4b_2         2
     sky130_fd_sc_hd__or4bb_2        1
     sky130_fd_sc_hd__xnor2_2        2
     sky130_fd_sc_hd__xor2_2         4

   Chip area for module '\TopModule': 1103.558400

70. Executing Verilog backend.
Dumping module `\TopModule'.

71. Executing JSON backend.

End of script. Logfile hash: fb5212aeb7, CPU: user 1.23s system 0.05s, MEM: 43.05 MB peak
Yosys 0.38 (git sha1 543faed9c8c, clang++ 17.0.6 -fPIC -Os)
Time spent: 26% 2x abc (0 sec), 21% 2x read_liberty (0 sec), ...
